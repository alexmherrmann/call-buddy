#!/bin/sh
# Given a target UNIX machine, syncs up an appropriate architecture specific
# 'call-buddy' binary to the target machine and launches the remote binary
# using ssh.
#
# Any additional files given are synced up before launch and all files
# existing in the remote ~/.call-buddy directory are synced down and updated
# at regular intervals.
#
# The location of the local architecture-specific 'call-buddy' binaries should
# be put in the $TCB_ARCH_DIR environment variable if they are installed
# outside of the prefix where 'call-buddy' in the $PATH is located.
#
# Sycning requires the 'rsync' utility to be installed on both ends. This
# script aims to be POSIX compliant to work on any UNIX machine, but no
# garuantees.
#
# Author: Dylan Gardner <dylan.gardner@utah.edu>
# Usage: ./tcb [USER@HOST] file...
set -e
sync() {
    while true; do
        rsync -av --exclude "call-buddy" "$target:~/.call-buddy/" `pwd` >> sync.log
        if ! test $? -eq 0; then
            echo "Failed to sync using rsync... continuing without rsync" > /dev/stderr
            return
        fi
        sleep 3
    done
}
syncup() {
    echo "Syncing up the state and files..." > /dev/stderr
    if [ -f "state.json" ]; then
        rsync -av "state.json" $@ "$target:~/.call-buddy/" >> sync.log
    else
        rsync -av $@ "$target:~/.call-buddy/" >> sync.log
    fi
}
die() {
    echo "$@" > /dev/stderr
    exit 1
}

if [ "$1" == "" ]; then
    die "No target given"
fi
target="$1"

if ! [ -d "$TCB_ARCH_DIR" ]; then
    die "TCB_ARCH_DIR=\"$TCB_ARCH_DIR\" does not exist"
fi

printf "Looking up architecture..." > /dev/stderr
lookup_arch_cmd="uname -s -m | tr ' ' '-' | tr '[:upper:]' '[:lower:]'"
arch="$(ssh "$target" "$lookup_arch_cmd")"
if [ "$arch" == "" ]; then
    die "could not lookup architecture of '$target'"
fi
echo " found $arch" > /dev/stderr

source_call_buddy="$TCB_ARCH_DIR/$arch/call-buddy"
if ! [ -x "$source_call_buddy" ]; then
    die "$arch binary of call-buddy does not exist at '$source_call_buddy'"
fi

echo "Syncing $TCB_ARCH_DIR/$arch/call-buddy to $target:~/.call-buddy/call-buddy..." > /dev/stderr
remote_call_buddy="$target:~/.call-buddy/call-buddy"
ssh "$target" "mkdir -p ~/.call-buddy"
if ! rsync -av "$source_call_buddy" "$remote_call_buddy" >> sync.log; then
    die "Failed to sync '$source_call_buddy' to '$remote_call_buddy'"
fi

local_env_file="$(hostname).env"
env > "$local_env_file"

shift
syncup $@ $local_env_file
sync &

trap "trap - SIGTERM && kill -- -$$" SIGINT SIGTERM EXIT
ssh -t "$target" "cd ~/.call-buddy && ./call-buddy -e $local_env_file"
